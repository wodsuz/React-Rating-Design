{"version":3,"sources":["bars.js","StarRating.js","App.js","reportWebVitals.js","index.js"],"names":["Botnavbar","class","Button","variant","size","href","target","ColoredLine","color","style","backgroundColor","height","Copyrighttags","Date","getFullYear","StarRating","useState","rating","setRating","newColor1","hover","setHover","hexValues","Array","map","star","i","a","Math","round","random","populate","ratingValue","type","name","value","onClick","className","onMouseEnter","onMouseLeave","StarRating2","HeartRating","DollarSign","Thumbsymbol","Facesmood","Worldrot","Flagmod","country_code","countryCode","colors","newColor2","gradient","document","body","background","backgroundAttachment","random_color","Star","starId","onMouseOver","trial","id","width","fill","viewBox","points","App","hoverState","setHoverState","feedback_text","textbox","getElementById","innerText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0821fca4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport const Botnavbar=() => {\r\n    return <div class=\"botnavbar_container \">\r\n        <Button variant=\"outline-dark\" size=\"sm\" href={'https://www.ongundemirag.com/contact'} target=\"_blank\">Contact</Button>{' '}\r\n        <Button variant=\"outline-dark\" size=\"sm\" href={'https://www.linkedin.com/in/ongun-demirag/'} target=\"_blank\" >Linkedin</Button>{' '}\r\n        <Button variant=\"outline-dark\" size=\"sm\" href={'https://github.com/wodsuz'} target=\"_blank\">Github</Button>{' '}\r\n        <Button variant=\"outline-dark\" size=\"sm\" href={'https://www.hackerrank.com/wodsuz'} target=\"_blank\" >Hackerrank</Button>{' '}\r\n        <Button variant=\"outline-dark\" size=\"sm \"href={'https://www.ongundemirag.com'} target=\"_blank\"> Portfolio</Button>{' '}\r\n    </div>\r\n}\r\n\r\nexport const ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 1\r\n        }}\r\n    />\r\n);\r\n\r\nexport const Copyrighttags=() => {\r\n    return  <div class=\"header\">\r\n        <h6>\r\n            {(new Date().getFullYear())}\r\n             - Ongun Demirag Ⓒ  <br></br> React,Hooks,States,Bootstrap,FA Icons,Circle flags,Gradient Coloring,Mobile Friendly,\r\n        </h6>\r\n    </div>\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {FaStar,FaHeart,FaDollarSign,FaThumbsDown,FaThumbsUp} from \"react-icons/fa\"; \r\nimport {FaAngry,FaFrown,FaMeh,FaGrinBeam,FaGrinHearts} from 'react-icons/fa'\r\nimport {FaGlobeEurope,FaGlobeAfrica,FaGlobeAmericas,FaGlobeAsia} from 'react-icons/fa'\r\nimport { CircleFlag } from 'react-circle-flags'\r\n\r\nexport const StarRating = () => {\r\n    const [rating, setRating] = useState(null);\r\n    var newColor1 = \"\"\r\n    const [hover, setHover] = useState(null);\r\n    var hexValues = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\"];\r\n    return <div class=\"flex-container\">\r\n        {[...Array(5)].map((star,i) => {\r\n            function populate(a) {\r\n            for ( var i = 0; i < 6; i++ ) { a += hexValues[ Math.round( Math.random() * 14 )]}\r\n                return a;\r\n              }\r\n            newColor1 = populate('#');\r\n            const ratingValue = i + 1;\r\n              return <label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name=\"rating\" \r\n                  value= {ratingValue} \r\n                  onClick ={() => setRating(ratingValue) } \r\n                  />\r\n                  <FaStar className=\"star\" \r\n                  color={ratingValue <= (hover || rating) ? newColor1 : \"#e4e5e9\" } \r\n                  size={50}\r\n                  onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                  onMouseLeave= {() => setHover(null)}\r\n                  />\r\n              </label> \r\n        })}\r\n         <p>  {rating}/5 </p>\r\n    </div>\r\n}\r\nexport const StarRating2 = () => {\r\n    const [rating, setRating] = useState(null);\r\n    const [hover, setHover] = useState(null);\r\n    var hexValues = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\"];\r\n    function populate(a) {\r\n        for ( var i = 0; i < 6; i++ ) { a += hexValues[ Math.round( Math.random() * 14 )]}\r\n            return a;\r\n    }\r\n    var newColor1 = populate('#');\r\n    return <div class=\"flex-container\">\r\n        {[...Array(5)].map((star,i) => {  \r\n            const ratingValue = i + 1;\r\n              return <label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name=\"rating\" \r\n                  value= {ratingValue} \r\n                  onClick ={() => setRating(ratingValue) } \r\n                  />\r\n                  <FaStar className=\"star\" \r\n                  color={ratingValue <= (hover || rating) ? newColor1 : \"#e4e5e9\" } \r\n                  size={50}\r\n                  onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                  onMouseLeave= {() => setHover(null)}\r\n                  />\r\n              </label> \r\n        })}\r\n         <p>  {rating}/5 </p>\r\n    </div>\r\n}\r\nexport const HeartRating = () => {\r\n    const [rating, setRating] = useState(null);\r\n    const [hover, setHover] = useState(null);\r\n    return <div class=\"flex-container\">\r\n        {[...Array(5)].map((star,i) => {\r\n            const ratingValue = i + 1;\r\n              return <label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name=\"rating\" \r\n                  value= {ratingValue} \r\n                  onClick ={() => setRating(ratingValue) } \r\n                  />\r\n                  <FaHeart className=\"star\" \r\n                  color={ratingValue <= (hover || rating) ? \"#ff0000\" : \"#e4e5e9\" } \r\n                  size={50}\r\n                  onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                  onMouseLeave= {() => setHover(null)}\r\n                  />\r\n              </label> \r\n        })}\r\n         <p>  {rating}/5 </p>\r\n    </div>\r\n}\r\nexport const DollarSign = () => {\r\n    const [rating, setRating] = useState(null);\r\n    const [hover, setHover] = useState(null);\r\n    return <div class=\"flex-container\">\r\n        {[...Array(5)].map((star,i) => {\r\n            const ratingValue = i + 1;\r\n              return <label>\r\n                  <input \r\n                  type=\"radio\" \r\n                  name=\"rating\" \r\n                  value= {ratingValue} \r\n                  onClick ={() => setRating(ratingValue) } \r\n                  />\r\n                  <FaDollarSign className=\"star\" \r\n                  color={ratingValue <= (hover || rating) ? \"#85bb65\" : \"#e4e5e9\" } \r\n                  size={50}\r\n                  onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                  onMouseLeave= {() => setHover(null)}\r\n                  />\r\n              </label> \r\n        })}\r\n         <p>  {rating}/5 </p>\r\n    </div>\r\n}\r\nexport const Thumbsymbol = () => {\r\n    const [rating, setRating] = useState(null);\r\n    const [hover, setHover] = useState(null);\r\n    return <div class=\"flex-container\">\r\n        {[...Array(2)].map((star,i) => {\r\n            const ratingValue = i + 1;\r\n            if (i<1) {\r\n                return <label>\r\n                <input \r\n                type=\"radio\" \r\n                value= {ratingValue} \r\n                onClick ={() => setRating(ratingValue) } \r\n                />\r\n                <FaThumbsUp \r\n                className=\"star\" \r\n                color={ratingValue === (hover || rating) ? \"#0000ff\" : \"#e4e5e9\" } \r\n                size={50}\r\n                onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                onMouseLeave= {() => setHover(null)}\r\n                />\r\n            </label> \r\n            }\r\n            else {\r\n                return <label>\r\n                <input \r\n                type=\"radio\" \r\n                value= {ratingValue} \r\n                onClick ={() => setRating(ratingValue) } \r\n                />\r\n                <FaThumbsDown \r\n                className=\"star\" \r\n                color={ratingValue === (hover || rating) ? \"#FF0000\" : \"#e4e5e9\" } \r\n                size={50}\r\n                onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                onMouseLeave= {() => setHover(null)}\r\n                />\r\n            </label> \r\n            }\r\n           \r\n        })}\r\n        <div class=\"text_explanation\">\r\n      <p>{rating === 1 ? 'Liked' : rating === 2 ? 'Disliked' : ''}  </p>  \r\n      </div>\r\n</div>\r\n}\r\nexport const Facesmood = () => {\r\n    const [rating, setRating] = useState(null);\r\n    const [hover, setHover] = useState(null);\r\n    return <div class=\"flex-container\">\r\n        {[...Array(5)].map((star,i )=>{\r\n            const ratingValue = i + 1;\r\n            if (i<1) {\r\n                return <label>\r\n                <input \r\n                type=\"radio\" \r\n                value= {ratingValue} \r\n                onClick ={() => setRating(ratingValue) } \r\n                />\r\n                <FaAngry \r\n                className=\"star\" \r\n                color={ratingValue === (hover || rating) ? \"#800020\" : \"#e4e5e9\" } \r\n                size={50}\r\n                onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                onMouseLeave= {() => setHover(null)}\r\n                />\r\n            </label> \r\n            }\r\n           else if (i<2) {\r\n            return <label>\r\n            <input \r\n            type=\"radio\" \r\n            value= {ratingValue} \r\n            onClick ={() => setRating(ratingValue) } \r\n            />\r\n            <FaFrown \r\n            className=\"star\" \r\n            color={ratingValue === (hover || rating) ? \"#D22B2B\" : \"#e4e5e9\" } \r\n            size={50}\r\n            onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n            onMouseLeave= {() => setHover(null)}\r\n            />\r\n        </label> \r\n           }\r\n           else if (i<3) {\r\n            return <label>\r\n            <input \r\n            type=\"radio\" \r\n            value= {ratingValue} \r\n            onClick ={() => setRating(ratingValue) } \r\n            />\r\n            <FaMeh \r\n            className=\"star\" \r\n            color={ratingValue === (hover || rating) ? \"#AA4A44\" : \"#e4e5e9\" } \r\n            size={50}\r\n            onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n            onMouseLeave= {() => setHover(null)}\r\n            />\r\n        </label> \r\n            }\r\n           else if (i<4) {\r\n            return <label>\r\n            <input \r\n            type=\"radio\" \r\n            value= {ratingValue} \r\n            onClick ={() => setRating(ratingValue) } \r\n            />\r\n            <FaGrinBeam \r\n            className=\"star\" \r\n            color={ratingValue === (hover || rating) ? \"#228B22\" : \"#e4e5e9\" } \r\n            size={50}\r\n            onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n            onMouseLeave= {() => setHover(null)}\r\n            />\r\n        </label> \r\n            }\r\n            else {\r\n                return <label>\r\n                <input \r\n                type=\"radio\" \r\n                value= {ratingValue} \r\n                onClick ={() => setRating(ratingValue) } \r\n                />\r\n                <FaGrinHearts \r\n                className=\"star\" \r\n                color={ratingValue === (hover || rating) ? \"#0FFF50\" : \"#e4e5e9\" } \r\n                size={50}\r\n                onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                onMouseLeave= {() => setHover(null)}\r\n                />\r\n            </label> \r\n            }\r\n           \r\n        })}\r\n        <div class=\"text_explanation\">\r\n      <p>{rating === 1 ? 'Angry' : rating === 2 ? 'Sad' :  rating === 3 ? 'Decent' :  rating === 4 ? 'Happy' :  rating === 5 ? 'In Love' :  ''}  </p>  \r\n        </div>\r\n    </div>\r\n}\r\nexport const Worldrot = () => {\r\n    var hexValues = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\"];\r\n    const [rating, setRating] = useState(null);\r\n    const [hover, setHover] = useState(null);\r\n    return <div class=\"flex-container\">\r\n        {[...Array(4)].map((star,i )=>{\r\n            const ratingValue = i + 1;\r\n            function populate(a) {\r\n                for ( var i = 0; i < 6; i++ ) { a += hexValues[ Math.round( Math.random() * 14 )]}\r\n                    return a;\r\n                  }\r\n            var newColor1 = populate('#');      \r\n            if (i<1) {\r\n                return <label>\r\n                <input \r\n                type=\"radio\" \r\n                value= {ratingValue} \r\n                onClick ={() => setRating(ratingValue) } \r\n                />\r\n                <FaGlobeEurope \r\n                className=\"star\" \r\n                color={ratingValue === (hover || rating) ? newColor1 : \"#e4e5e9\" } \r\n                size={50}\r\n                onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                onMouseLeave= {() => setHover(null)}\r\n            />\r\n            </label> \r\n            }\r\n           else if (i<2) {\r\n            return <label>\r\n            <input \r\n            type=\"radio\" \r\n            value= {ratingValue} \r\n            onClick ={() => setRating(ratingValue) } \r\n            />\r\n            <FaGlobeAfrica \r\n            className=\"star\" \r\n            color={ratingValue === (hover || rating) ? newColor1 : \"#e4e5e9\" } \r\n            size={50}\r\n            onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n            onMouseLeave= {() => setHover(null)}\r\n            />\r\n        </label> \r\n           }\r\n           else if (i<3) {\r\n            return <label>\r\n            <input \r\n            type=\"radio\" \r\n            value= {ratingValue} \r\n            onClick ={() => setRating(ratingValue) } \r\n            />\r\n            <FaGlobeAmericas \r\n            className=\"star\" \r\n            color={ratingValue === (hover || rating) ? newColor1 : \"#e4e5e9\" } \r\n            size={50}\r\n            onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n            onMouseLeave= {() => setHover(null)}\r\n            />\r\n        </label> \r\n            }\r\n            else {\r\n                return <label>\r\n                <input \r\n                type=\"radio\" \r\n                value= {ratingValue} \r\n                onClick ={() => setRating(ratingValue) } \r\n                />\r\n                <FaGlobeAsia \r\n                className=\"star\" \r\n                color={ratingValue === (hover || rating) ? newColor1 : \"#e4e5e9\" } \r\n                size={50}\r\n                onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                onMouseLeave= {() => setHover(null)}\r\n                />\r\n            </label> \r\n            }\r\n        })}\r\n        <div class=\"text_explanation\">\r\n      <p>{rating === 1 ? 'Europe' : rating === 2 ? 'Africa' :  rating === 3 ? 'Americas' :  rating === 4 ? 'Asia' :  rating === 5 ? 'In Love' :  ''}  </p>  \r\n        </div>\r\n    </div>\r\n}\r\nexport const Flagmod = () => {\r\n    const [rating, setRating] = useState(null);\r\n    const [hover, setHover] = useState(null);\r\n    const country_code = [\"ch\",\"cz\",\"de\",\"es\",\"gb\",\"it\",\"pl\",\"ru\",\"tr\",\"us\"]\r\n    return <div class=\"flex-container\">\r\n        {[...Array(10)].map((star,i )=>{\r\n            const ratingValue = i + 1;\r\n                return <label>\r\n                <input \r\n                type=\"radio\" \r\n                value= {ratingValue} \r\n                onClick ={() => setRating(ratingValue) } \r\n                />\r\n                <CircleFlag \r\n                countryCode={country_code[i]}\r\n                className=\"flag\" \r\n                height={ratingValue === (hover || rating) ? 35 : 25 } \r\n                onMouseEnter= {() => {setHover(ratingValue);setRating(ratingValue)} }\r\n                onMouseLeave= {() => setHover(null)}\r\n                />\r\n            </label> \r\n        })}\r\n        <div class=\"text_explanation\">\r\n      <p>{country_code[rating-1]} </p>  \r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React, { useState } from \"react\";\nimport {Botnavbar,ColoredLine,Copyrighttags} from './bars'\nimport './App.css';\nimport {StarRating,HeartRating,DollarSign,StarRating2,Thumbsymbol,Facesmood,Worldrot,Flagmod} from \"./StarRating\"; \n\nfunction random_color(){\n  var hexValues = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\"];\n  function populate(a) {\n  for ( var i = 0; i < 6; i++ ) { a += hexValues[ Math.round( Math.random() * 14 )]}\n    return a;\n  }\n  var newColor1 = populate('#');\n  var newColor2 = populate('#');\n  var angle = Math.round( Math.random() * 360 );\n  var gradient = \"linear-gradient(\" + angle + \"deg, \" + newColor1 + \", \" + newColor2 + \")\";\n  document.body.style.background = gradient;\n  document.body.style.backgroundAttachment = \"fixed\";\n  return [newColor1]\n}\n\nvar colors = random_color();\nconst Star = ({ starId, rating, onMouseEnter, onMouseLeave, onClick, onMouseOver }) => {\n  let trial = \"#717171\"\n  if (rating && rating >= starId) trial = colors[0]\n\n  return (\n    <div\n      className=\"star\"\n      id=\"de\"\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      onClick={onClick}\n      onMouseOver={onMouseOver}\n    >\n      <svg\n        height=\"50px\"\n        width=\"50px\"\n       // class={styleClass}\n       fill = {trial} \n       viewBox=\"0 0 25 23\"\n        data-rating=\"1\"\n      >\n        <polygon\n          stroke-width=\"0\"\n          points=\"9.9, 1.1, 3.3, 21.78, 19.8, 8.58, 0, 8.58, 16.5, 21.78\"\n        />\n      </svg>\n    </div>\n  );\n};\n\n\nfunction App() {\n   const [rating,setRating] = useState(0);\n   const [hoverState, setHoverState] = useState(0);\n   const stars = [1,2,3,4,5];\n   function feedback_text(i) {\n    var textbox = document.getElementById(\"outputdisplay\")\n    if (i<1) textbox.innerText=\"Useless\"\n    else if (i<2) textbox.innerText=\"1/5 Poor\" \n    else if (i<3) textbox.innerText=\"2/5 Ok\"\n    else if (i<4) textbox.innerText=\"3/5 Fair\" \n    else if (i<5) textbox.innerText=\"4/5 Great\"\n    else if (i<6)textbox.innerText=\"5/5 Excellent\"\n  }\n\n\n\n   return (\n      <div className=\"App\">\n        <div class=\"Display\">\n        <div class=\"header\">React Ratings Project  Ⓒ  Ongun Demirag </div>\n        <ColoredLine color=\"black\" />\n        <div class=\"flex-container\">\n          {stars.map((i) =>  (\n            <Star \n              key= {i}\n              starId={i}\n              rating={hoverState || rating }\n              onMouseEnter={() => setHoverState(i)}\n              onMouseLeave={() => setHoverState(0)}\n              onClick={() => {setRating(i);feedback_text(i)} }\n              onMouseOver={() => feedback_text(i)}\n            />\n          ))}\n        <div class=\"Output\" id=\"outputdisplay\"></div>\n        </div>\n        <ColoredLine color=\"black\" />\n        <StarRating/>\n        <ColoredLine color=\"black\" />\n        <StarRating2/>\n        <ColoredLine color=\"black\" />\n        <HeartRating/>\n        <ColoredLine color=\"black\" />\n        <DollarSign />\n        <ColoredLine color=\"black\" />\n        <Thumbsymbol />\n        <ColoredLine color=\"black\" />\n        <Facesmood />\n        <ColoredLine color=\"black\" />\n        <Worldrot />\n        <ColoredLine color=\"black\" />\n        <Flagmod />\n        <ColoredLine color=\"black\" />\n        <Botnavbar />\n        <ColoredLine color=\"black\" />\n        <Copyrighttags />\n        </div>\n      </div>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}